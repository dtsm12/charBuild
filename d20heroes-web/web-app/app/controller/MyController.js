/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MyController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "searchfield": {
                clearicontap: 'onSearchfieldClearicontap',
                keyup: 'onSearchfieldKeyup'
            }
        }
    },

    onSearchfieldClearicontap: function(text, e, options) {
        //call the clearFilter method on the store instance  
        text.getParent().query('#power_list')[0].getStore().clearFilter();  
    },

    onSearchfieldKeyup: function(textfield, e, options) {
        //get the store and the value of the field  
        var value = textfield.getValue(),  

        //  getting the store that drives the contact list  
        store = textfield.getParent().query('#power_list')[0].getStore();    

        //first clear any current filters on thes tore  
        store.clearFilter();  

        //check if a value is set first, as if it isnt we dont have to do anything  
        if (value) 
        {  
            //the user could have entered spaces, so we must split them so we can loop through them all  
            var searches = value.split(' '),  
            regexps = [],  
            i;  

            //loop them all  
            for (i = 0; i < searches.length; i++) 
            {  
                //if it is nothing, continue  
                if (!searches[i]) continue;  

                //if found, create a new regular expression which is case insenstive  
                regexps.push(new RegExp(searches[i], 'i'));  
            }  

            //now filter the store by passing a method  
            //the passed method will be called for each record in the store  
            store.filter(function(record) 
            {  
                var matched = [];  

                //loop through each of the regular expressions  
                for (i = 0; i < regexps.length; i++) 
                {  
                    var search = regexps[i],  
                    didMatch = record.get('name').match(search);  
                    //if it matched the name, push it into the matches array   

                    matched.push(didMatch);  

                }  //if nothing was found, return false (dont so in the store)                 

                if (regexps.length > 1 && matched.indexOf(false) != -1) 
                {
                    return false;  
                } else {  
                    //else true true (show in the store)  
                    return matched[0];  
                }  

            });
        }  
    },

    init: function(application) {

        this.control({  

            '#power_search':{
                scope: this,  
                clearicontap: this.onSearchClearIconTap,  
                keyup: this.onSearchKeyUp  
            }  

        });
    }

});